var splinterlands=function(){let _config={},_player=null,_settings={},_cards=[],_market=[],_use_keychain=!1,_transactions={},_collection=[],_browser_id=null,_session_id=null;function get_card_details(card_detail_id){return card_detail_id?_cards.find(c=>c.id==card_detail_id):_cards}function api(url,data){return new Promise((resolve,reject)=>{null!=data&&void 0!=data||(data={}),data.v=(new Date).getTime(),_player&&(data.token=_player.token,data.username=_player.name),jQuery.getJSON(_config.api_url+url,data,r=>resolve(r))})}async function log_event(event_name,data){return await api("/players/event",{browser_id:_browser_id,session_id:_session_id,event_name:event_name,page:"",user_agent:window.navigator.userAgent,browser_language:window.navigator.language,site_language:localStorage.getItem("splinterlands:locale"),data:JSON.stringify(data)})}async function load_settings(){let response=await api("/settings");_settings.version&&_settings.version!=response.version&&window.dispatchEvent(new CustomEvent("splinterlands:version_change",{detail:response.version})),_settings=response}async function load_balances(){return _player.balances=await api("/players/balances"),_player.balances}function check_tx(sm_id,timeout){return new Promise(resolve=>{_transactions[sm_id]={resolve:resolve},_transactions[sm_id].timeout=setTimeout(()=>{_transactions[sm_id]&&"complete"!=_transactions[sm_id].status&&resolve({success:!1,error:"Your transaction could not be found. This may be an issue with the game server. Please try refreshing the site to see if the transaction went through."}),delete _transactions[sm_id]},1e3*(timeout||30))})}async function load_collection(player){return!player&&_player&&(player=_player.name),_collection=(await api(`/cards/collection/${player}`)).cards.map(c=>new splinterlands.Card(c))}async function load_market(){return _market=await api("/market/for_sale_grouped")}function group_collection(collection,id_only){collection||(collection=_collection);let grouped=[];return _cards.forEach(details=>{id_only?grouped.push(Object.assign({card_detail_id:details.id,cards:collection.filter(o=>o.card_detail_id==details.id)},details)):details.editions.split(",").forEach(edition=>{let reg_cards=collection.filter(o=>o.card_detail_id==details.id&&0==o.gold&&o.edition==parseInt(edition));reg_cards.length>0?grouped.push(new splinterlands.Card(Object.assign({cards:reg_cards},reg_cards[0]))):grouped.push(new splinterlands.Card({gold:!1,card_detail_id:details.id,edition:parseInt(edition),cards:reg_cards}));let gold_cards=collection.filter(o=>o.card_detail_id==details.id&&1==o.gold&&o.edition==parseInt(edition));gold_cards.length>0?grouped.push(new splinterlands.Card(Object.assign({cards:gold_cards},gold_cards[0]))):grouped.push(new splinterlands.Card({gold:!0,card_detail_id:details.id,edition:parseInt(edition),cards:gold_cards}))})}),grouped}return{init:async function(config){_config=config,_browser_id=localStorage.getItem("splinterlands:browser_id"),_session_id="sid_"+splinterlands.utils.randomStr(20),_browser_id||(_browser_id="bid_"+splinterlands.utils.randomStr(20),localStorage.setItem("splinterlands:browser_id",_browser_id)),await load_settings(),setInterval(load_settings,6e4),_cards=await api("/cards/get_details"),await load_market()},api:api,login:async function(username,key){if(!username&&(username=localStorage.getItem("splinterlands:username"),key=localStorage.getItem("splinterlands:key"),!username))return{success:!1,error:"Username not specified."};if((username=username.toLowerCase().trim()).startsWith("@")&&(username=username.substr(1)),(_use_keychain=!key)&&!window.steem_keychain)return{success:!1,error:"Missing private posting key."};if(!_use_keychain){if(key.startsWith("STM"))return{success:!1,error:"This appears to be a public key. You must use your private posting key to log in."};key&&!steem.auth.isWif(key)&&(key=steem.auth.getPrivateKeys(username,key,["posting"]).posting);try{steem.auth.wifToPublic(key)}catch(err){return{success:!1,error:`Invalid password or private posting key for account @${username}`}}}let response=await api("/players/login",{name:username,ref:localStorage.getItem("splinterlands:ref")});if(!response||response.error)return{success:!1,error:"An unknown error occurred trying to log in."};let token=null;if(_use_keychain){let keychain_response=await new Promise(resolve=>steem_keychain.requestVerifyKey(username,response.token,"Posting",r=>resolve(r)));if(!keychain_response||!keychain_response.success)return{success:!1,error:`The login attempt for account @${username} was unsuccessful.`};token=keychain_response.result.startsWith("#")?keychain_response.result.substr(1):keychain_response.result}else try{token=window.decodeMemo(key,response.token).substr(1)}catch(err){return{success:!1,error:"Invalid password or private posting key for account @"+username}}return(_player=response).token=token,localStorage.setItem("splinterlands:username",username),_use_keychain||localStorage.setItem("splinterlands:key",key),splinterlands.socket.connect(_config.ws_url,_player.name,_player.token),await load_collection(),await load_balances(),_player},logout:function(){localStorage.removeItem("splinterlands:username"),localStorage.removeItem("splinterlands:key"),_player=null,_collection=null,splinterlands.socket.close()},send_tx:async function send_tx(id,display_name,data,retries){retries||(retries=0),id=splinterlands.utils.format_tx_id(id);try{data=splinterlands.utils.format_tx_data(data)}catch(err){return log_event("tx_length_exceeded",{type:id}),{success:!1,error:err.toString()}}let data_str=JSON.stringify(data),check_tx_promise=check_tx(data.sm_id),broadcast_promise=null;broadcast_promise=_use_keychain?new Promise(resolve=>steem_keychain.requestCustomJson(_player.name,id,"Posting",data_str,display_name,response=>{resolve({type:"broadcast",success:response.success,trx_id:response.success?response.result.id:null,error:response.success?null:"string"==typeof response.error?response.error:JSON.stringify(response.error)})})):new Promise(resolve=>steem.broadcast.customJson(localStorage.getItem("splinterlands:key"),[],[_player.name],id,data_str,(err,response)=>{resolve({type:"broadcast",success:response&&response.id,trx_id:response&&response.id?response.id:null,error:err?JSON.stringify(err):null})}));let result=await Promise.race([check_tx_promise,broadcast_promise]);if("broadcast"!=result.type)return result;if(result.success)return await check_tx_promise;if(function(sm_id){let tx=_transactions[sm_id];tx&&(clearTimeout(tx.timeout),delete _transactions[sm_id])}(data.sm_id),"user_cancel"==result.error)return result;if(result.error.indexOf("Please wait to transact")>=0){let delegation_result=await api("/players/delegation");return delegation_result&&delegation_result.success?(await splinterlands.utils.timeout(3e3),await send_tx(id,display_name,data,retries+1)):(log_event("delegation_request_failed",{operation:id,error:result.error}),"Oops, it looks like you don't have enough Resource Credits to transact on the Steem blockchain. Please contact us on Discord for help! Error: "+result.error)}return retries<2?(await splinterlands.utils.timeout(3e3),await send_tx(id,display_name,data,retries+1)):(log_event("custom_json_failed",{response:JSON.stringify(result)}),result)},load_collection:load_collection,group_collection:group_collection,get_battle_summoners:function(inactive_splinters,allowed_cards,ruleset,match_type,rating_level){return group_collection(_collection,!0).filter(d=>"Summoner"==d.type&&d.cards.length>0).map(d=>{if(inactive_splinters.includes(d.color))return null;if(["no_legendaries","no_legendary_summoners"].includes(allowed_cards)&&4==d.rarity)return null;if("Little League"==ruleset&&d.stats.mana>4)return null;let card=d.cards.find(o=>("gold_only"!=allowed_cards||o.gold)&&("alpha_only"!=allowed_cards||0==o.edition)&&("Ranked"!=match_type||splinterlands.utils.is_playable(o))&&(!o.delegated_to||o.delegated_to==_player.name));return card&&((card=Object.assign({},card)).level=splinterlands.utils.get_summoner_level(rating_level,card)),card}).filter(c=>c)},get_battle_monsters:function(allowed_cards,ruleset,match_type,rating_level,summoner_card,ally_color){let summoner_details=get_card_details(summoner_card.card_detail_id);return group_collection(_collection,!0).filter(d=>"Monster"==d.type&&d.cards.length>0&&(d.color==summoner_details.color||"Gray"==d.color||"Gold"==summoner_details.color&&d.color==ally_color)).map(d=>{if(("Lost Legendaries"==ruleset||"no_legendaries"==allowed_cards)&&4==d.rarity)return;if("Rise of the Commons"==ruleset&&d.rarity>2)return;if("Taking Sides"==ruleset&&"Gray"==d.color)return;if("Little League"==ruleset&&d.stats.mana[0]>4)return;let card=d.cards.find(o=>("gold_only"!=allowed_cards||o.gold)&&("alpha_only"!=allowed_cards||0==o.edition)&&("Ranked"!=match_type||splinterlands.utils.is_playable(o))&&(!o.delegated_to||o.delegated_to==_player.name));if(card){if(card.capped_level=splinterlands.utils.get_monster_level(rating_level,summoner_card,card),"Up Close & Personal"==ruleset&&0==d.stats.attack[card.capped_level-1])return;if("Keep Your Distance"==ruleset&&d.stats.attack[card.capped_level-1]>0)return;if("Broken Arrows"==ruleset&&d.stats.ranged[card.capped_level-1]>0)return}return card}).filter(c=>c)},get_card_details:get_card_details,get_balance:async function(token,refresh){_player.balances&&!refresh||await load_balances();let balance=_player.balances.find(b=>b.token==token);return balance?parseFloat(balance.balance):0},log_event:log_event,load_balances:load_balances,load_market:load_market,send_payment:async function(to,amount,currency,id,data){id=splinterlands.utils.format_tx_id(id);try{data=splinterlands.utils.format_tx_data(data)}catch(err){return log_event("tx_length_exceeded",{type:id}),{success:!1,error:err.toString()}}let token=splinterlands.utils.get_token(currency),memo=JSON.stringify([id,data]);switch(token.type){case"steem":if(_use_keychain){if(!(result=await new Promise(resolve=>steem_keychain.requestTransfer(_player.name,to,parseFloat(amount).toFixed(3),memo,currency,response=>resolve(response)))).success)return{success:!1,error:result.error}}else{let sc_url=`https://v2.steemconnect.com/sign/transfer?to=${to}&amount=${parseFloat(amount).toFixed(3)}%20${currency}&memo=${encodeURIComponent(memo)}`;splinterlands.utils.popup_center(sc_url,`${currency} Payment`,500,560)}break;case"steem_engine":var result;if(!(result=await splinterlands.utils.steem_engine_transfer(to,currency,amount,memo)).success)return{success:!1,error:result.error};break;case"tron":break;case"internal":return await splinterlands.ops.token_transfer(to,amount,data)}return await check_tx(data.sm_id,12e4)},get_settings:()=>_settings,get_player:()=>_player,get_market:()=>_market,get_collection:()=>_collection,get_transaction:sm_id=>_transactions[sm_id],use_keychain:()=>_use_keychain}}();window.splinterlands||(window.splinterlands={}),window.splinterlands.utils=function(){function randomStr(length){for(var charset="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",retVal="",i=0,n=charset.length;i<length;++i)retVal+=charset.charAt(Math.floor(Math.random()*n));return retVal}function get_league(rating){return rating<100?0:rating>=4700?15:rating>=4200?14:rating>=3700?13:Math.min(parseInt((rating-100)/300)+1,15)}function get_summoner_level(rating_level,card){var max_level=10-2*(splinterlands.get_card_details(card.card_detail_id).rarity-1);return Math.min(card.level,Math.max(Math.round(max_level/4*rating_level),1))}function popup_center(url,title,w,h){var dualScreenLeft=void 0!=window.screenLeft?window.screenLeft:screen.left,dualScreenTop=void 0!=window.screenTop?window.screenTop:screen.top,left=(window.innerWidth?window.innerWidth:document.documentElement.clientWidth?document.documentElement.clientWidth:screen.width)/2-w/2+dualScreenLeft,top=(window.innerHeight?window.innerHeight:document.documentElement.clientHeight?document.documentElement.clientHeight:screen.height)/2-h/2+dualScreenTop,newWindow=window.open(url,title,"scrollbars=yes, width="+w+", height="+h+", top="+top+", left="+left);return window.focus&&newWindow.focus(),newWindow}return BETA_CARD_URL="https://s3.amazonaws.com/steemmonsters/cards_beta/",ALPHA_CARD_URL="https://s3.amazonaws.com/steemmonsters/cards_v2.2/",{randomStr:randomStr,timeout:function(ms){return new Promise(resolve=>setTimeout(resolve,ms))},get_cur_block_num:function(){return Math.max(Math.floor((Date.now()-splinterlands.get_settings().timestamp)/3e3),0)+splinterlands.get_settings().last_block},get_league:get_league,get_league_level:function(rating){return Math.max(Math.min(Math.floor((get_league(rating)-1)/3)+1,4),0)},get_league_name:function(rating){var num=get_league(rating),tier=(num-1)%3;return(num<4?"Bronze":num<7?"Silver":num<10?"Gold":num<13?"Diamond":"Champion")+" "+(0==tier?"III":1==tier?"II":"I")},get_summoner_level:get_summoner_level,get_monster_level:function(rating_level,summoner_card,monster_card){if(0==rating_level)return 1;var summoner_rarity=splinterlands.get_card_details(summoner_card.card_detail_id).rarity,monster_rarity=splinterlands.get_card_details(monster_card.card_detail_id).rarity,summoner_level=get_summoner_level(rating_level,summoner_card),monster_max=10-2*(monster_rarity-1),summoner_max=10-2*(summoner_rarity-1);return Math.min(monster.level,Math.max(Math.round(monster_max/summoner_max*summoner_level),1))},get_ecr:function(capture_rate,last_reward_block){return Math.min((isNaN(parseInt(capture_rate))?1e4:capture_rate)+(splinterlands.get_settings().last_block-last_reward_block)*splinterlands.get_settings().dec.ecr_regen_rate,1e4)},get_token:function(symbol){return splinterlands.get_settings().supported_currencies.find(c=>c.currency==symbol)},format_tx_id:function(id){return id.startsWith("sm_")||(id=`sm_${id}`),splinterlands.get_settings().test_mode&&!id.startsWith(splinterlands.get_settings().prefix)&&(id=`${splinterlands.get_settings().prefix}${id}`),id},format_tx_data:function(data){if(data||(data={}),data.app=`steemmonsters/${splinterlands.get_settings().version}`,data.sm_id=randomStr(10),splinterlands.get_settings().test_mode&&(data.app=`${splinterlands.get_settings().prefix}${data.app}`),JSON.stringify(data).length>2e3)throw new Error("Max custom_json data length exceeded.");return data},popup_center:popup_center,steem_engine_transfer:async function(to,token,quantity,memo){var transaction_data={contractName:"tokens",contractAction:"transfer",contractPayload:{symbol:token,to:to,quantity:quantity+"",memo:memo}};if(splinterlands.use_keychain()){var result=await new Promise(resolve=>steem_keychain.requestCustomJson(splinterlands.get_player().name,splinterlands.get_settings().ssc.chain_id,"Active",JSON.stringify(transaction_data),"Transfer Token: "+token,r=>resolve(r)));if(!result.success)return{success:!1,error:result.error}}else{var url="https://steemconnect.com/sign/custom-json?";url+="required_posting_auths="+encodeURI("[]"),url+="&required_auths="+encodeURI('["'+splinterlands.get_player().name+'"]'),url+="&id="+splinterlands.get_settings().ssc.chain_id,popup_center(url+="&json="+encodeURI(JSON.stringify(transaction_data)),`${currency} Payment`,500,560)}return{success:!0}},get_edition_str:function(edition){return["Alpha","Beta","Promo","Reward"][edition]}}}(),window.splinterlands||(window.splinterlands={}),window.splinterlands.socket=function(){let _url=null,_ws=null,_ping_interval=null,_session_id=null;function connect(url,player,token,new_account){_session_id||(_session_id=splinterlands.utils.randomStr(10)),_url=url,_ws=new WebSocket(_url),console.log("Opening socket connection..."),_ws.onopen=function(){send(new_account?{type:"new_account",player:player,session_id:_session_id}:{type:"auth",player:player,access_token:token,session_id:_session_id})},_ws.onmessage=on_message,_ws.onerror=on_error,_ws.onclose=on_close,_ping_interval&&clearInterval(_ping_interval),_ping_interval=setInterval(ping,6e4)}function on_message(m){console.log(m);var message=JSON.parse(m.data);message.id&&_message_handlers[message.id]&&_message_handlers[message.id](message.data),message.ack&&send({type:"ack",msg_id:message.msg_id})}function on_error(e){console.log("Socket error..."),console.log(e)}function on_close(e){console.log("Socket closed..."),console.log(e),splinterlands.get_player()&&setTimeout(()=>connect(_url,splinterlands.get_player().name,splinterlands.get_player().token),1e3)}function send(message){_ws.send(JSON.stringify(message))}function ping(){send({type:"ping"})}let _message_handlers={transaction_complete:function(data){var trx=splinterlands.get_transaction(data.sm_id);trx&&(clearTimeout(trx.timeout),trx.resolve(data))}};return{connect:connect,close:function(){_ws.close()}}}(),splinterlands.Card=class{constructor(data){Object.keys(data).forEach(k=>this[k]=data[k]),this.details=splinterlands.get_card_details(this.card_detail_id)}get bcx(){return this._bcx?this._bcx:(this._bcx=Math.floor(Math.max(this.gold?this.xp/this.base_xp:(this.xp+this.base_xp)/this.base_xp,1)),this._bcx)}get base_xp(){if(this._base_xp)return this._base_xp;let xp_property=0==this.edition||2==this.edition&&this.card_detail_id<100?this.gold?"gold_xp":"alpha_xp":this.gold?"beta_gold_xp":"beta_xp";return this._base_xp=splinterlands.get_settings()[xp_property][this.details.rarity-1],this._base_xp}get dec(){if(this._dec)return this._dec;let alpha_bcx=0,alpha_dec=0,xp=Math.max(this.xp-this.alpha_xp,0);if(this.alpha_xp){let alpha_bcx_xp=splinterlands.get_settings()[this.gold?"gold_xp":"alpha_xp"][this.details.rarity-1];alpha_bcx=Math.max((this.gold,this.alpha_xp/alpha_bcx_xp),1),alpha_dec=splinterlands.get_settings().dec.burn_rate[this.details.rarity-1]*alpha_bcx*splinterlands.get_settings().dec.alpha_burn_bonus,this.gold&&(alpha_dec*=splinterlands.get_settings().dec.gold_burn_bonus)}let bcx=Math.max(this.gold?xp/this.base_xp:(xp+this.base_xp)/this.base_xp,1);this.alpha_xp&&bcx--;let dec=splinterlands.get_settings().dec.burn_rate[this.details.rarity-1]*bcx;this.gold&&(dec*=splinterlands.get_settings().dec.gold_burn_bonus),0==this.edition&&(dec*=splinterlands.get_settings().dec.alpha_burn_bonus),2==this.edition&&(dec*=splinterlands.get_settings().dec.promo_burn_bonus);let total_dec=dec+alpha_dec;return this.xp>=splinterlands.get_settings().xp_levels[this.details.rarity-1][splinterlands.get_settings().xp_levels[this.details.rarity-1].length-1]&&(total_dec*=splinterlands.get_settings().dec.max_burn_bonus),this._dec=total_dec,this._dec}get playable(){if(this.market_id)return!1;if(!this.last_transferred_block||!this.last_used_block)return!0;let cooldown_expiration=splinterlands.utils.get_cur_block_num()-splinterlands.get_settings().transfer_cooldown_blocks;return this.last_transferred_block<=cooldown_expiration||this.last_used_block<=cooldown_expiration}get stats(){if(this._stats)return this._stats;let stats=this.details.stats;if(!stats)return{mana:0,attack:0,magic:0,armor:0,health:0,speed:0,abilities:[],level:1};if("Summoner"==this.details.type)return this._stats=Object.assign({abilities:[],level:this.level},stats),this._stats;let abilities=[];for(let i=0;i<this.level;i++)stats.abilities[i].filter(a=>""!=a).forEach(a=>abilities.push(a));return this._stats={mana:stats.mana[this.level-1],attack:stats.attack[this.level-1],ranged:stats.ranged?stats.ranged[this.level-1]:0,magic:stats.magic[this.level-1],armor:stats.armor[this.level-1],health:stats.health[this.level-1],speed:stats.speed[this.level-1],abilities:abilities,level:this.level},this._stats}get value(){if(this._value)return this._value;let price_per_bcx=0,market_item=splinterlands.get_market().find(i=>i.card_detail_id==this.card_detail_id&&i.edition==this.edition&&i.gold==this.gold);return market_item&&(price_per_bcx=market_item.low_price_bcx),this._value=price_per_bcx*this.bcx,this._value}render(){let element=document.createElement("div");element.setAttribute("class","sl-card"),element.setAttribute("card_id",this.id),element.setAttribute("card_details_id",this.details.id),element.setAttribute("gold",this.gold),element.setAttribute("edition",this.edition);let img=document.createElement("img");img.setAttribute("src",this.get_image_url()),img.setAttribute("class","sl-card-img"),element.appendChild(img);let name=document.createElement("div");name.setAttribute("class","sl-rel-pos");let name_bg=document.createElement("div");name_bg.setAttribute("class",`sl-name-bg ${this.gold?"sl-name-bg-gold":"sl-name-bg-"+this.details.color.toLowerCase()}`);let name_text=document.createElement("div");name_text.setAttribute("class","sl-name-text");let name_text_text=document.createElement("div");name_text_text.setAttribute("class","sl-name-text-text"),name_text_text.innerText=this.details.name,name_text.appendChild(name_text_text);let name_text_lvl=document.createElement("div");return name_text_lvl.setAttribute("class","sl-name-text-lvl"),name_text_lvl.innerText=`★ ${this.level||1}`,name_text.appendChild(name_text_lvl),name.appendChild(name_bg),name.appendChild(name_text),element.appendChild(name),element}get_image_url(){return(1==this.edition||3==this.edition?BETA_CARD_URL:ALPHA_CARD_URL)+(this.skin?this.skin+"/":"")+encodeURIComponent(this.details.name)+(this.gold?"_gold":"")+".png"}},window.splinterlands||(window.splinterlands={}),window.splinterlands.ops=function(){return{combine_cards:async function(card_ids){return await splinterlands.send_tx("combine_cards","Combine Cards",{cards:card_ids})},combine_all:async function(card_detail_id,gold,edition){return await splinterlands.send_tx("combine_all","Combine Cards",{card_detail_id:card_detail_id,gold:gold,edition:edition})},convert_cards:async function(card_ids){return await splinterlands.send_tx("convert_cards","Convert to Beta",{cards:card_ids})},burn_cards:async function(card_ids){return await splinterlands.send_tx("burn_cards","Convert to DEC",{cards:card_ids})},add_wallet:async function(type,address){return await splinterlands.send_tx("add_wallet","Link External Wallet",{type:type,address:address})},gift_cards:async function(card_ids,to){return await splinterlands.send_tx("gift_cards","Transfer Cards",{cards:card_ids,to:to})},token_transfer:async function(to,qty,data){var obj={to:to,qty:qty,token:"DEC"};return data&&"object"==typeof data&&(obj=Object.assign(obj,data)),await splinterlands.send_tx("token_transfer","Transfer DEC",obj)},sell_cards:async function(card_ids,price){return await splinterlands.send_tx("sell_cards","Sell Cards",{cards:card_ids,price:price,currency:"USD",fee_pct:splinterlands.get_settings().market_fee})},cancel_sell:async function(market_id){return await splinterlands.send_tx("cancel_sell","Cancel Market Sale",{trx_ids:[market_id]})},find_match:async function(match_type,opponent,settings){return"Ranked"!=match_type||splinterlands.get_player().starter_pack_purchase?await splinterlands.send_tx("find_match","Find Match",{match_type:match_type,opponent:opponent,settings:settings}):{error:"You must purchase the Starter Set in order to play ranked battles."}},submit_team:async function(trx_id,summoner,monsters,match_type,secret){let data={trx_id:trx_id,team_hash:md5(`${summoner},${monsters.join()},${secret}`)};return("Practice"==match_type||"Ranked"==match_type)&&!splinterlands.get_player().settings.submit_hashed_team&&(data.summoner=summoner,data.monsters=monsters,data.secret=secret),await splinterlands.send_tx("submit_team","Submit Team",data)},team_reveal:async function(trx_id,summoner,monsters,secret){return await splinterlands.send_tx("team_reveal","Team Reveal",{trx_id:trx_id,summoner:summoner,monsters:monsters,secret:secret})},cancel_match:async function(){return await splinterlands.send_tx("cancel_match","Cancel Match")},surrender:async function(battle_queue_id){return await splinterlands.send_tx("surrender","Surrender",{battle_queue_id:battle_queue_id})},claim_quest_rewards:async function(quest_id){return await splinterlands.send_tx("claim_reward","Claim Reward",{type:"quest",quest_id:quest_id})},claim_season_rewards:async function(season){return await splinterlands.send_tx("claim_reward","Claim Reward",{type:"league_season",season:season})},start_quest:async function(){return await splinterlands.send_tx("start_quest","Start Quest",{type:"daily"})},refresh_quest:async function(){return await splinterlands.send_tx("refresh_quest","Start Quest",{type:"daily"})},accept_challenge:async function(id){return await splinterlands.send_tx("accept_challenge","Accept Challenge",{id:id})},decline_challenge:async function(id){return await splinterlands.send_tx("decline_challenge","Decline Challenge",{id:id})}}}();